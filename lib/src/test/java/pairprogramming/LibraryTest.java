/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package pairprogramming;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    private Library classUnderTest = new Library();

    @Test 
    void testSameIntegerPointReturnZero() {
        double codingResult = classUnderTest.findLength(1, 1, 1, 1);
        double expectedResult = 0;
        assertEquals(codingResult, expectedResult, "Testing same integer point");
    }

    @Test 
    void testSameFloatingPointReturnZero() {
        double codingResult = classUnderTest.findLength(1.0, 1.0, 1.0, 1.0);
        double expectedResult = 0;
        assertEquals(codingResult, expectedResult, "Testing same floating point");
    }

    @Test 
    void testDifferentIntegerPoint() {
        double codingResult = classUnderTest.findLength(0, 0, 3, 4);
        double expectedResult = 5;
        assertEquals(codingResult, expectedResult, "Testing different integer point");
    }

    @Test 
    void testDifferentFloatingPoint() {
        double codingResult = classUnderTest.findLength(0.0, 0.0, 3.0, 4.0);
        double expectedResult = 5;
        assertEquals(codingResult, expectedResult, "Testing different floating point");
    }

    @Test 
    void testDifferentNegativeFloatingPoint() {
        double codingResult = classUnderTest.findLength(0.0, 0.0, -3.0, -4.0);
        double expectedResult = 5;
        assertEquals(codingResult, expectedResult, "Testing different negative floating point");
    }

    @Test 
    void testDifferentDecimalFloatingPoint() {
        double codingResult = classUnderTest.findLength(0.0, 0.0, 0.3, 0.4);
        double expectedResult = 0.5;
        assertEquals(codingResult, expectedResult, "Testing different negative floating point");
    }
}
